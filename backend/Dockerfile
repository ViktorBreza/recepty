# Multi-stage build for ARM64 (Pi 5) optimization
# FORCE REBUILD v1.0.1 - fixing docs_url=/api/docs
FROM python:3.11-slim as builder

# Set working directory
WORKDIR /app

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY backend/requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --user -r requirements.txt

# Production stage
FROM python:3.11-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user for security
RUN groupadd -r kitkuhar && useradd -r -g kitkuhar kitkuhar

# Set working directory
WORKDIR /app

# Copy Python packages from builder
COPY --from=builder /root/.local /home/kitkuhar/.local

# Copy application code
COPY backend/ ./
COPY backend/requirements.txt .

# Create necessary directories
RUN mkdir -p media logs && \
    chown -R kitkuhar:kitkuhar /app

# Switch to non-root user
USER kitkuhar

# Add local packages to PATH
ENV PATH=/home/kitkuhar/.local/bin:$PATH

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Start command optimized for Pi 5
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "2"]