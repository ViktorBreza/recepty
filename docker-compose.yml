
services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: kitkuhar-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: kitkuhar
      POSTGRES_USER: kitkuhar_user
      POSTGRES_PASSWORD: kitkuhar_password_2024
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./database/backups:/backups
    # Port removed for production security - access via container network only
    networks:
      - kitkuhar-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kitkuhar_user -d kitkuhar"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend (FastAPI)
  backend:
    build: 
      context: .
      dockerfile: backend/Dockerfile
    container_name: kitkuhar-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://kitkuhar_user:kitkuhar_password_2024@database:5432/kitkuhar
      SECRET_KEY: kitkuhar_secret_key_2024_very_secure
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
    volumes:
      - media_files:/app/media
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    networks:
      - kitkuhar-network
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Next.js SSR)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kitkuhar-frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_BASE_URL: https://kitkuhar.com
      NODE_ENV: production
    ports:
      - "3000:3000"
    networks:
      - kitkuhar-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database Management (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kitkuhar-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: brezaviktor@gmail.com
      PGADMIN_DEFAULT_PASSWORD: kitkuharadminzalupa
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      SCRIPT_NAME: /db-admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - kitkuhar-network
    depends_on:
      database:
        condition: service_healthy

  # Reverse Proxy (Nginx)
  nginx:
    image: nginx:alpine
    container_name: kitkuhar-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.nextjs.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - media_files:/var/www/media
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - kitkuhar-network
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
    driver: local
  media_files:
    driver: local
  pgadmin_data:
    driver: local

networks:
  kitkuhar-network:
    driver: bridge